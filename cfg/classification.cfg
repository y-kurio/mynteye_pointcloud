#!/usr/bin/env python
PACKAGE = "mynteye_pointcloud"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("windowDivisionDegree", int_t, 0, "An Integer parameter", 3, 1, 90)
gen.add("windowHeight", double_t, 0, "A double parameter", .15, .01, 1)
gen.add("windowWidth", double_t, 0, "A double parameter", .15, .01, 1)
gen.add("windowMinPts", int_t, 0, "A double parameter", 100, 1, 10000)
gen.add("baseDistance", double_t, 0, "A double parameter", 3, 1, 10)
gen.add("debugAngle", int_t, 0, "An Integer parameter", 0, -45, 45)
gen.add("debugX", double_t, 0, "A double parameter", 0, -4, 4)
gen.add("debugY", double_t, 0, "A double parameter", 0, -4, 4)

# sample
# gen.add("str_param", str_t, 0, "A string parameter", "Hello World")
# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)
# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")
# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "mynteye_pointcloud", "classification"))